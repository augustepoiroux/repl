{"cmd": "def foo : (fun ((x, _, _) : Nat × Nat × Nat) => x = x) = fun _ => True := by sorry"}

{"tactic": "funext ⟨x, y, z⟩", "proofState": 0}

{"tactic": "show (x = x) = True", "proofState": 1}

{"tactic": "rw [eq_self_iff_true]", "proofState": 2}

{"tactic": "simp", "proofState": 0}

{"cmd": "def foo : (fun ((x, _, _) : Nat × Nat × Nat) => x = x) = fun _ => True := by simp"}
